{"ast":null,"code":"import _slicedToArray from \"/Users/harry/Desktop/Javascript/Tinder Clone/tinder-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/harry/Desktop/Javascript/Tinder Clone/tinder-clone/src/components/ChatScreen.js\";\nimport { Avatar } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport \"./ChatScreen.css\";\n\nfunction ChatScreen() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([{\n    name: \"Ellen\",\n    image: \"http://www.venmond.com/demo/vendroid/img/avatar/big.jpg\",\n    message: \"Whats up:\"\n  }, {\n    name: \"Ellen\",\n    image: \"http://www.venmond.com/demo/vendroid/img/avatar/big.jpg\",\n    message: \"Hows it going?\"\n  }, {\n    message: \"Im good, how are you?\"\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var handleSend = function handleSend(e) {\n    e.preventdefa;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatScreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chatScreen__timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"YOU MATCHED WITH ELLEN ON 10/08/21\"), messages.map(function (message) {\n    return message.name ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatScreen__message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: \"chatScreen__image\",\n      alt: message.name,\n      src: message.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatScreen__text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, message.message)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatScreen__message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatScreen__textUser\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, message.message));\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"chatScreen__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    className: \"chatScreen__inputField\",\n    placeholder: \"Type a message...\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSend,\n    type: \"submit\",\n    className: \"chatScreen__inputButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"SEND\")));\n}\n\nexport default ChatScreen;","map":{"version":3,"sources":["/Users/harry/Desktop/Javascript/Tinder Clone/tinder-clone/src/components/ChatScreen.js"],"names":["Avatar","React","useState","ChatScreen","input","setInput","name","image","message","messages","setMessages","handleSend","e","preventdefa","map","target","value"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACMD,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACbE,KADa;AAAA,MACNC,QADM;;AAAA,mBAEYH,QAAQ,CAAC,CACvC;AACEI,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,KAAK,EAAE,yDAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADuC,EAMvC;AACEF,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,KAAK,EAAE,yDAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANuC,EAWvC;AACEA,IAAAA,OAAO,EAAE;AADX,GAXuC,CAAD,CAFpB;AAAA;AAAA,MAEbC,QAFa;AAAA,MAEHC,WAFG;;AAkBpB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,CAAC,EAAI;AACpBA,IAAAA,CAAC,CAACC,WAAF;AACH,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAIGJ,QAAQ,CAACK,GAAT,CAAa,UAACN,OAAD;AAAA,WACZA,OAAO,CAACF,IAAR,gBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,GAAG,EAAEE,OAAO,CAACF,IAFf;AAGE,MAAA,GAAG,EAAEE,OAAO,CAACD,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCC,OAAO,CAACA,OAAzC,CANF,CADF,gBAUE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,OAAO,CAACA,OAA7C,CADF,CAXU;AAAA,GAAb,CAJH,eAoBE;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,QAAQ,EAAE,kBAACQ,CAAD;AAAA,aAAOP,QAAQ,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AAAA,KAFZ;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAIE,IAAA,WAAW,EAAC,mBAJd;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAQ,IAAA,OAAO,EAAGL,UAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAA4C,IAAA,SAAS,EAAC,yBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CApBF,CADF;AAiCD;;AAED,eAAeR,UAAf","sourcesContent":["import { Avatar } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport \"./ChatScreen.css\";\n\nfunction ChatScreen() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([\n    {\n      name: \"Ellen\",\n      image: \"http://www.venmond.com/demo/vendroid/img/avatar/big.jpg\",\n      message: \"Whats up:\",\n    },\n    {\n      name: \"Ellen\",\n      image: \"http://www.venmond.com/demo/vendroid/img/avatar/big.jpg\",\n      message: \"Hows it going?\",\n    },\n    {\n      message: \"Im good, how are you?\",\n    },\n  ]);\n\n  const handleSend = e => {\n      e.preventdefa\n  }\n\n  return (\n    <div className=\"chatScreen\">\n      <p className=\"chatScreen__timestamp\">\n        YOU MATCHED WITH ELLEN ON 10/08/21\n      </p>\n      {messages.map((message) =>\n        message.name ? (\n          <div className=\"chatScreen__message\">\n            <Avatar\n              className=\"chatScreen__image\"\n              alt={message.name}\n              src={message.image}\n            />\n            <p className=\"chatScreen__text\">{message.message}</p>\n          </div>\n        ) : (\n          <div className=\"chatScreen__message\">\n            <p className=\"chatScreen__textUser\">{message.message}</p>\n          </div>\n        )\n      )}\n      <form className=\"chatScreen__input\">\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          className=\"chatScreen__inputField\"\n          placeholder=\"Type a message...\"\n          type=\"text\"\n        />\n        <button onClick ={handleSend} type=\"submit\" className=\"chatScreen__inputButton\">SEND</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}